/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of finding a string
 */
public class SwagFindStringRegexResponse implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Regular expression matches
     * @return matches
     */
    public List<SwagFindRegexMatch> matches { get; set; }

    /**
     * The number of matches
     * @return matchCount
     */
    public Integer matchCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Matches' => 'matches',
        'MatchCount' => 'matchCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagFindStringRegexResponse() {
        matches = new List<SwagFindRegexMatch>();
    }

    public static SwagFindStringRegexResponse getExample() {
        SwagFindStringRegexResponse findStringRegexResponse = new SwagFindStringRegexResponse();
        findStringRegexResponse.successful = true;
        findStringRegexResponse.matches = new List<SwagFindRegexMatch>{SwagFindRegexMatch.getExample()};
        findStringRegexResponse.matchCount = 123;
        return findStringRegexResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFindStringRegexResponse) {
            SwagFindStringRegexResponse findStringRegexResponse = (SwagFindStringRegexResponse) obj;
            return this.successful == findStringRegexResponse.successful
                && this.matches == findStringRegexResponse.matches
                && this.matchCount == findStringRegexResponse.matchCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (matches == null ? 0 : System.hashCode(matches));
        hashCode = (17 * hashCode) + (matchCount == null ? 0 : System.hashCode(matchCount));
        return hashCode;
    }
}

