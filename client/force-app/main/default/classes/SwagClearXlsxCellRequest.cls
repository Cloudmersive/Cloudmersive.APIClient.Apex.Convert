/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Input to a Clear Cell in XLSX Worksheet request
 */
public class SwagClearXlsxCellRequest implements Swagger.MappedProperties {
    /**
     * Optional: Bytes of the input file to operate on
     * @return inputFileBytes
     */
    public Blob inputFileBytes { get; set; }

    /**
     * Optional: URL of a file to operate on as input.  This can be a public URL, or you can also use the begin-editing API to upload a document and pass in the secure URL result from that operation as the URL here (this URL is not public).
     * @return inputFileUrl
     */
    public String inputFileUrl { get; set; }

    /**
     * Optional; Worksheet (tab) within the spreadsheet to update; leave blank to default to the first worksheet
     * @return worksheetToUpdate
     */
    public SwagXlsxWorksheet worksheetToUpdate { get; set; }

    /**
     * 0-based index of the row, 0, 1, 2, ... to clear
     * @return rowIndex
     */
    public Integer rowIndex { get; set; }

    /**
     * 0-based index of the cell, 0, 1, 2, ... in the row to clear
     * @return cellIndex
     */
    public Integer cellIndex { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'InputFileBytes' => 'inputFileBytes',
        'InputFileUrl' => 'inputFileUrl',
        'WorksheetToUpdate' => 'worksheetToUpdate',
        'RowIndex' => 'rowIndex',
        'CellIndex' => 'cellIndex'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagClearXlsxCellRequest getExample() {
        SwagClearXlsxCellRequest clearXlsxCellRequest = new SwagClearXlsxCellRequest();
        clearXlsxCellRequest.inputFileBytes = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        clearXlsxCellRequest.inputFileUrl = 'aeiou';
        clearXlsxCellRequest.worksheetToUpdate = SwagXlsxWorksheet.getExample();
        clearXlsxCellRequest.rowIndex = 123;
        clearXlsxCellRequest.cellIndex = 123;
        return clearXlsxCellRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagClearXlsxCellRequest) {
            SwagClearXlsxCellRequest clearXlsxCellRequest = (SwagClearXlsxCellRequest) obj;
            return this.inputFileBytes == clearXlsxCellRequest.inputFileBytes
                && this.inputFileUrl == clearXlsxCellRequest.inputFileUrl
                && this.worksheetToUpdate == clearXlsxCellRequest.worksheetToUpdate
                && this.rowIndex == clearXlsxCellRequest.rowIndex
                && this.cellIndex == clearXlsxCellRequest.cellIndex;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (inputFileBytes == null ? 0 : System.hashCode(inputFileBytes));
        hashCode = (17 * hashCode) + (inputFileUrl == null ? 0 : System.hashCode(inputFileUrl));
        hashCode = (17 * hashCode) + (worksheetToUpdate == null ? 0 : System.hashCode(worksheetToUpdate));
        hashCode = (17 * hashCode) + (rowIndex == null ? 0 : System.hashCode(rowIndex));
        hashCode = (17 * hashCode) + (cellIndex == null ? 0 : System.hashCode(cellIndex));
        return hashCode;
    }
}

