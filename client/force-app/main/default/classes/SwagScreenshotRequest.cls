/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Details of the screenshot request
 */
public class SwagScreenshotRequest implements Swagger.MappedProperties {
    /**
     * URL address of the website to screenshot.  HTTP and HTTPS are both supported, as are custom ports.
     * @return url
     */
    public String url { get; set; }

    /**
     * Optional: Additional number of milliseconds to wait once the web page has finished loading before taking the screenshot.  Can be helpful for highly asynchronous websites.  Provide a value of 0 for the default of 5000 milliseconds (5 seconds)
     * @return extraLoadingWait
     */
    public Integer extraLoadingWait { get; set; }

    /**
     * Optional: Width of the screenshot in pixels; supply 0 to default to 1280 x 1024, supply -1 to measure the full screen height of the page and attempt to take a screen-height screenshot
     * @return screenshotWidth
     */
    public Integer screenshotWidth { get; set; }

    /**
     * Optional: Height of the screenshot in pixels; supply 0 to default to 1280 x 1024, supply -1 to measure the full screen height of the page and attempt to take a screen-height screenshot
     * @return screenshotHeight
     */
    public Integer screenshotHeight { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Url' => 'url',
        'ExtraLoadingWait' => 'extraLoadingWait',
        'ScreenshotWidth' => 'screenshotWidth',
        'ScreenshotHeight' => 'screenshotHeight'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagScreenshotRequest getExample() {
        SwagScreenshotRequest screenshotRequest = new SwagScreenshotRequest();
        screenshotRequest.url = 'aeiou';
        screenshotRequest.extraLoadingWait = 123;
        screenshotRequest.screenshotWidth = 123;
        screenshotRequest.screenshotHeight = 123;
        return screenshotRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagScreenshotRequest) {
            SwagScreenshotRequest screenshotRequest = (SwagScreenshotRequest) obj;
            return this.url == screenshotRequest.url
                && this.extraLoadingWait == screenshotRequest.extraLoadingWait
                && this.screenshotWidth == screenshotRequest.screenshotWidth
                && this.screenshotHeight == screenshotRequest.screenshotHeight;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (extraLoadingWait == null ? 0 : System.hashCode(extraLoadingWait));
        hashCode = (17 * hashCode) + (screenshotWidth == null ? 0 : System.hashCode(screenshotWidth));
        hashCode = (17 * hashCode) + (screenshotHeight == null ? 0 : System.hashCode(screenshotHeight));
        return hashCode;
    }
}

