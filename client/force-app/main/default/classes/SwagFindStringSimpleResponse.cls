/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of finding a string
 */
public class SwagFindStringSimpleResponse implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Found matches
     * @return matches
     */
    public List<SwagFindStringMatch> matches { get; set; }

    /**
     * The number of matches
     * @return matchCount
     */
    public Integer matchCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Matches' => 'matches',
        'MatchCount' => 'matchCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagFindStringSimpleResponse() {
        matches = new List<SwagFindStringMatch>();
    }

    public static SwagFindStringSimpleResponse getExample() {
        SwagFindStringSimpleResponse findStringSimpleResponse = new SwagFindStringSimpleResponse();
        findStringSimpleResponse.successful = true;
        findStringSimpleResponse.matches = new List<SwagFindStringMatch>{SwagFindStringMatch.getExample()};
        findStringSimpleResponse.matchCount = 123;
        return findStringSimpleResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFindStringSimpleResponse) {
            SwagFindStringSimpleResponse findStringSimpleResponse = (SwagFindStringSimpleResponse) obj;
            return this.successful == findStringSimpleResponse.successful
                && this.matches == findStringSimpleResponse.matches
                && this.matchCount == findStringSimpleResponse.matchCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (matches == null ? 0 : System.hashCode(matches));
        hashCode = (17 * hashCode) + (matchCount == null ? 0 : System.hashCode(matchCount));
        return hashCode;
    }
}

