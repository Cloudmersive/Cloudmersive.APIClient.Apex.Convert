/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of base 64 encoding
 */
public class SwagBase64EncodeResponse implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Result of performing a base 64 encoding operation, a text string representing the encoded original file content
     * @return base64TextContentResult
     */
    public String base64TextContentResult { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Base64TextContentResult' => 'base64TextContentResult'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagBase64EncodeResponse getExample() {
        SwagBase64EncodeResponse base64EncodeResponse = new SwagBase64EncodeResponse();
        base64EncodeResponse.successful = true;
        base64EncodeResponse.base64TextContentResult = 'aeiou';
        return base64EncodeResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagBase64EncodeResponse) {
            SwagBase64EncodeResponse base64EncodeResponse = (SwagBase64EncodeResponse) obj;
            return this.successful == base64EncodeResponse.successful
                && this.base64TextContentResult == base64EncodeResponse.base64TextContentResult;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (base64TextContentResult == null ? 0 : System.hashCode(base64TextContentResult));
        return hashCode;
    }
}

