/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of performing a filter operation on XML input using XPath
 */
public class SwagXmlFilterWithXPathResult implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Matching selected XML nodes as strings
     * @return xmlNodes
     */
    public List<String> xmlNodes { get; set; }

    /**
     * Count of the matching results
     * @return resultCount
     */
    public Integer resultCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'XmlNodes' => 'xmlNodes',
        'ResultCount' => 'resultCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagXmlFilterWithXPathResult() {
        xmlNodes = new List<String>();
    }

    public static SwagXmlFilterWithXPathResult getExample() {
        SwagXmlFilterWithXPathResult xmlFilterWithXPathResult = new SwagXmlFilterWithXPathResult();
        xmlFilterWithXPathResult.successful = true;
        xmlFilterWithXPathResult.xmlNodes = new List<String>{'aeiou'};
        xmlFilterWithXPathResult.resultCount = 123;
        return xmlFilterWithXPathResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagXmlFilterWithXPathResult) {
            SwagXmlFilterWithXPathResult xmlFilterWithXPathResult = (SwagXmlFilterWithXPathResult) obj;
            return this.successful == xmlFilterWithXPathResult.successful
                && this.xmlNodes == xmlFilterWithXPathResult.xmlNodes
                && this.resultCount == xmlFilterWithXPathResult.resultCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (xmlNodes == null ? 0 : System.hashCode(xmlNodes));
        hashCode = (17 * hashCode) + (resultCount == null ? 0 : System.hashCode(resultCount));
        return hashCode;
    }
}

