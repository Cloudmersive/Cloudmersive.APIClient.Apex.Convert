/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to split a PowerPoint presentation
 */
public class SwagPptxSplitAdvancedRequest implements Swagger.MappedProperties {
    /**
     * Input file
     * @return inputFile
     */
    public Blob inputFile { get; set; }

    /**
     * Slides per presentation for result
     * @return slidesPerPresentation
     */
    public Integer slidesPerPresentation { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'InputFile' => 'inputFile',
        'SlidesPerPresentation' => 'slidesPerPresentation'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagPptxSplitAdvancedRequest getExample() {
        SwagPptxSplitAdvancedRequest pptxSplitAdvancedRequest = new SwagPptxSplitAdvancedRequest();
        pptxSplitAdvancedRequest.inputFile = EncodingUtil.base64Decode('VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2cu');
        pptxSplitAdvancedRequest.slidesPerPresentation = 123;
        return pptxSplitAdvancedRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagPptxSplitAdvancedRequest) {
            SwagPptxSplitAdvancedRequest pptxSplitAdvancedRequest = (SwagPptxSplitAdvancedRequest) obj;
            return this.inputFile == pptxSplitAdvancedRequest.inputFile
                && this.slidesPerPresentation == pptxSplitAdvancedRequest.slidesPerPresentation;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (inputFile == null ? 0 : System.hashCode(inputFile));
        hashCode = (17 * hashCode) + (slidesPerPresentation == null ? 0 : System.hashCode(slidesPerPresentation));
        return hashCode;
    }
}

