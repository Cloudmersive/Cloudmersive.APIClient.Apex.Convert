/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagZipArchiveApi {
    SwagClient client;

    public SwagZipArchiveApi(SwagClient client) {
        this.client = client;
    }

    public SwagZipArchiveApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Compress files to create a new zip archive
     * Create a new zip archive by compressing input files.
     * @return Object
     * @throws Swagger.ApiException if fails to make API call
     */
    public Object zipArchiveZipCreate() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (Object) client.invoke(
            'POST', '/convert/archive/zip/create', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            Object.class
        );
    }
    /**
     * Compress files and folders to create a new zip archive with advanced options
     * Create a new zip archive by compressing input files, folders and leverage advanced options to control the structure of the resulting zip archive.
     * @param request Input request (required)
     * @return Object
     * @throws Swagger.ApiException if fails to make API call
     */
    public Object zipArchiveZipCreateAdvanced(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (Object) client.invoke(
            'POST', '/convert/archive/zip/create/advanced',
            (SwagCreateZipArchiveRequest) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            Object.class
        );
    }
    /**
     * Extract, decompress files and folders from a zip archive
     * Extracts a zip archive by decompressing files, and folders.
     * @param inputFile Input file to perform the operation on. (required)
     * @return SwagZipExtractResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagZipExtractResponse zipArchiveZipExtract(Map<String, Object> params) {
        client.assertNotNull(params.get('inputFile'), 'inputFile');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('inputFile', (Blob) params.get('inputFile')));

        return (SwagZipExtractResponse) client.invoke(
            'POST', '/convert/archive/zip/extract', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/x-www-form-urlencoded' },
            new List<String> { 'Apikey' },
            SwagZipExtractResponse.class
        );
    }
}
