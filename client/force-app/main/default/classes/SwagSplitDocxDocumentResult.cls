/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * The result of splitting a Word document into individual Word DOCX pages
 */
public class SwagSplitDocxDocumentResult implements Swagger.MappedProperties {
    /**
     * Get resultDocuments
     * @return resultDocuments
     */
    public List<SwagSplitDocumentResult> resultDocuments { get; set; }

    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ResultDocuments' => 'resultDocuments',
        'Successful' => 'successful'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagSplitDocxDocumentResult() {
        resultDocuments = new List<SwagSplitDocumentResult>();
    }

    public static SwagSplitDocxDocumentResult getExample() {
        SwagSplitDocxDocumentResult splitDocxDocumentResult = new SwagSplitDocxDocumentResult();
        splitDocxDocumentResult.resultDocuments = new List<SwagSplitDocumentResult>{SwagSplitDocumentResult.getExample()};
        splitDocxDocumentResult.successful = true;
        return splitDocxDocumentResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagSplitDocxDocumentResult) {
            SwagSplitDocxDocumentResult splitDocxDocumentResult = (SwagSplitDocxDocumentResult) obj;
            return this.resultDocuments == splitDocxDocumentResult.resultDocuments
                && this.successful == splitDocxDocumentResult.successful;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (resultDocuments == null ? 0 : System.hashCode(resultDocuments));
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        return hashCode;
    }
}

