/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of performing a find matching paragraphs operation on a Word Document
 */
public class SwagFindDocxParagraphResponse implements Swagger.MappedProperties {
    /**
     * True if successful; false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Matching paragraphs
     * @return matchingParagraphs
     */
    public List<SwagDocxParagraph> matchingParagraphs { get; set; }

    /**
     * Count of matching paragraphs
     * @return count
     */
    public Integer count { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'MatchingParagraphs' => 'matchingParagraphs',
        'Count' => 'count'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagFindDocxParagraphResponse() {
        matchingParagraphs = new List<SwagDocxParagraph>();
    }

    public static SwagFindDocxParagraphResponse getExample() {
        SwagFindDocxParagraphResponse findDocxParagraphResponse = new SwagFindDocxParagraphResponse();
        findDocxParagraphResponse.successful = true;
        findDocxParagraphResponse.matchingParagraphs = new List<SwagDocxParagraph>{SwagDocxParagraph.getExample()};
        findDocxParagraphResponse.count = 123;
        return findDocxParagraphResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFindDocxParagraphResponse) {
            SwagFindDocxParagraphResponse findDocxParagraphResponse = (SwagFindDocxParagraphResponse) obj;
            return this.successful == findDocxParagraphResponse.successful
                && this.matchingParagraphs == findDocxParagraphResponse.matchingParagraphs
                && this.count == findDocxParagraphResponse.count;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (matchingParagraphs == null ? 0 : System.hashCode(matchingParagraphs));
        hashCode = (17 * hashCode) + (count == null ? 0 : System.hashCode(count));
        return hashCode;
    }
}

