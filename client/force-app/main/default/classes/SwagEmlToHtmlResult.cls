/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of converting an EML file to HTML string
 */
public class SwagEmlToHtmlResult implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * An HTML string version of the EML file
     * @return content
     */
    public String content { get; set; }

    /**
     * The main body of the EML file\'s email as an HTML string
     * @return body
     */
    public String body { get; set; }

    /**
     * The From sender of the EML file\'s email
     * @return r_from
     */
    public String r_from { get; set; }

    /**
     * The To recipients of the EML file\'s email
     * @return to
     */
    public String to { get; set; }

    /**
     * The CC recipients of the EML file\'s email
     * @return cc
     */
    public String cc { get; set; }

    /**
     * The BCC recipients of the EML file\'s email
     * @return bcc
     */
    public String bcc { get; set; }

    /**
     * The time that the EML file\'s email was received
     * @return receivedTime
     */
    public String receivedTime { get; set; }

    /**
     * The subject of the EML file\'s email
     * @return subject
     */
    public String subject { get; set; }

    /**
     * The Organization of the EML file\'s email
     * @return organization
     */
    public String organization { get; set; }

    /**
     * List of all attachments for the EML file
     * @return attachments
     */
    public List<SwagEmlAttachment> attachments { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Content' => 'content',
        'Body' => 'body',
        'From' => 'r_from',
        'To' => 'to',
        'Cc' => 'cc',
        'Bcc' => 'bcc',
        'ReceivedTime' => 'receivedTime',
        'Subject' => 'subject',
        'Organization' => 'organization',
        'Attachments' => 'attachments'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagEmlToHtmlResult() {
        attachments = new List<SwagEmlAttachment>();
    }

    public static SwagEmlToHtmlResult getExample() {
        SwagEmlToHtmlResult emlToHtmlResult = new SwagEmlToHtmlResult();
        emlToHtmlResult.successful = true;
        emlToHtmlResult.content = 'aeiou';
        emlToHtmlResult.body = 'aeiou';
        emlToHtmlResult.r_from = 'aeiou';
        emlToHtmlResult.to = 'aeiou';
        emlToHtmlResult.cc = 'aeiou';
        emlToHtmlResult.bcc = 'aeiou';
        emlToHtmlResult.receivedTime = 'aeiou';
        emlToHtmlResult.subject = 'aeiou';
        emlToHtmlResult.organization = 'aeiou';
        emlToHtmlResult.attachments = new List<SwagEmlAttachment>{SwagEmlAttachment.getExample()};
        return emlToHtmlResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagEmlToHtmlResult) {
            SwagEmlToHtmlResult emlToHtmlResult = (SwagEmlToHtmlResult) obj;
            return this.successful == emlToHtmlResult.successful
                && this.content == emlToHtmlResult.content
                && this.body == emlToHtmlResult.body
                && this.r_from == emlToHtmlResult.r_from
                && this.to == emlToHtmlResult.to
                && this.cc == emlToHtmlResult.cc
                && this.bcc == emlToHtmlResult.bcc
                && this.receivedTime == emlToHtmlResult.receivedTime
                && this.subject == emlToHtmlResult.subject
                && this.organization == emlToHtmlResult.organization
                && this.attachments == emlToHtmlResult.attachments;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (content == null ? 0 : System.hashCode(content));
        hashCode = (17 * hashCode) + (body == null ? 0 : System.hashCode(body));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        hashCode = (17 * hashCode) + (cc == null ? 0 : System.hashCode(cc));
        hashCode = (17 * hashCode) + (bcc == null ? 0 : System.hashCode(bcc));
        hashCode = (17 * hashCode) + (receivedTime == null ? 0 : System.hashCode(receivedTime));
        hashCode = (17 * hashCode) + (subject == null ? 0 : System.hashCode(subject));
        hashCode = (17 * hashCode) + (organization == null ? 0 : System.hashCode(organization));
        hashCode = (17 * hashCode) + (attachments == null ? 0 : System.hashCode(attachments));
        return hashCode;
    }
}

