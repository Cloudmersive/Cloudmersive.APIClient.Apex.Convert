/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagDocxBody
 */
public class SwagDocxBody implements Swagger.MappedProperties {
    /**
     * The Path of the location of this object; leave blank for new tables
     * @return path
     */
    public String path { get; set; }

    /**
     * All paragraphs anywhere in the document; these objects are not sequentially placed but are scatted across document
     * @return allParagraphs
     */
    public List<SwagDocxParagraph> allParagraphs { get; set; }

    /**
     * All tables anywhere in the document; these objects are not sequentially placed but are scatted across the document
     * @return allTables
     */
    public List<SwagDocxTable> allTables { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Path' => 'path',
        'AllParagraphs' => 'allParagraphs',
        'AllTables' => 'allTables'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagDocxBody() {
        allParagraphs = new List<SwagDocxParagraph>();
        allTables = new List<SwagDocxTable>();
    }

    public static SwagDocxBody getExample() {
        SwagDocxBody docxBody = new SwagDocxBody();
        docxBody.path = 'aeiou';
        docxBody.allParagraphs = new List<SwagDocxParagraph>{SwagDocxParagraph.getExample()};
        docxBody.allTables = new List<SwagDocxTable>{SwagDocxTable.getExample()};
        return docxBody;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagDocxBody) {
            SwagDocxBody docxBody = (SwagDocxBody) obj;
            return this.path == docxBody.path
                && this.allParagraphs == docxBody.allParagraphs
                && this.allTables == docxBody.allTables;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (allParagraphs == null ? 0 : System.hashCode(allParagraphs));
        hashCode = (17 * hashCode) + (allTables == null ? 0 : System.hashCode(allTables));
        return hashCode;
    }
}

