/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * The result of splitting a Text document into separate elements
 */
public class SwagSplitTextDocumentByStringResult implements Swagger.MappedProperties {
    /**
     * Get resultElements
     * @return resultElements
     */
    public List<SwagTextDocumentElement> resultElements { get; set; }

    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * The count of elements in the text file
     * @return elementCount
     */
    public Integer elementCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ResultElements' => 'resultElements',
        'Successful' => 'successful',
        'ElementCount' => 'elementCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagSplitTextDocumentByStringResult() {
        resultElements = new List<SwagTextDocumentElement>();
    }

    public static SwagSplitTextDocumentByStringResult getExample() {
        SwagSplitTextDocumentByStringResult splitTextDocumentByStringResult = new SwagSplitTextDocumentByStringResult();
        splitTextDocumentByStringResult.resultElements = new List<SwagTextDocumentElement>{SwagTextDocumentElement.getExample()};
        splitTextDocumentByStringResult.successful = true;
        splitTextDocumentByStringResult.elementCount = 123;
        return splitTextDocumentByStringResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagSplitTextDocumentByStringResult) {
            SwagSplitTextDocumentByStringResult splitTextDocumentByStringResult = (SwagSplitTextDocumentByStringResult) obj;
            return this.resultElements == splitTextDocumentByStringResult.resultElements
                && this.successful == splitTextDocumentByStringResult.successful
                && this.elementCount == splitTextDocumentByStringResult.elementCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (resultElements == null ? 0 : System.hashCode(resultElements));
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (elementCount == null ? 0 : System.hashCode(elementCount));
        return hashCode;
    }
}

