/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Unit of text content in a Word Document (DOCX) file
 */
public class SwagDocxText implements Swagger.MappedProperties {
    /**
     * Index of the text content in the run; 0-based
     * @return textIndex
     */
    public Integer textIndex { get; set; }

    /**
     * The Path of the location of this object; leave blank for new tables
     * @return path
     */
    public String path { get; set; }

    /**
     * Text string containing the text content of this text content item
     * @return textContent
     */
    public String textContent { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'TextIndex' => 'textIndex',
        'Path' => 'path',
        'TextContent' => 'textContent'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagDocxText getExample() {
        SwagDocxText docxText = new SwagDocxText();
        docxText.textIndex = 123;
        docxText.path = 'aeiou';
        docxText.textContent = 'aeiou';
        return docxText;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagDocxText) {
            SwagDocxText docxText = (SwagDocxText) obj;
            return this.textIndex == docxText.textIndex
                && this.path == docxText.path
                && this.textContent == docxText.textContent;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (textIndex == null ? 0 : System.hashCode(textIndex));
        hashCode = (17 * hashCode) + (path == null ? 0 : System.hashCode(path));
        hashCode = (17 * hashCode) + (textContent == null ? 0 : System.hashCode(textContent));
        return hashCode;
    }
}

