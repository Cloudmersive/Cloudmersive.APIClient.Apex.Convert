/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * HTML SSRF validation result
 */
public class SwagHtmlSsrfThreatCheckResult implements Swagger.MappedProperties {
    /**
     * True if the document is valid and has no errors, false otherwise
     * @return isValid
     */
    public Boolean isValid { get; set; }

    /**
     * True if the document contains an SSRF threat, false otherwise
     * @return isThreat
     */
    public Boolean isThreat { get; set; }

    /**
     * Links found in the input HTML that contains threats
     * @return threatLinks
     */
    public List<SwagHtmlThreatLink> threatLinks { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'IsValid' => 'isValid',
        'IsThreat' => 'isThreat',
        'ThreatLinks' => 'threatLinks'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagHtmlSsrfThreatCheckResult() {
        threatLinks = new List<SwagHtmlThreatLink>();
    }

    public static SwagHtmlSsrfThreatCheckResult getExample() {
        SwagHtmlSsrfThreatCheckResult htmlSsrfThreatCheckResult = new SwagHtmlSsrfThreatCheckResult();
        htmlSsrfThreatCheckResult.isValid = true;
        htmlSsrfThreatCheckResult.isThreat = true;
        htmlSsrfThreatCheckResult.threatLinks = new List<SwagHtmlThreatLink>{SwagHtmlThreatLink.getExample()};
        return htmlSsrfThreatCheckResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHtmlSsrfThreatCheckResult) {
            SwagHtmlSsrfThreatCheckResult htmlSsrfThreatCheckResult = (SwagHtmlSsrfThreatCheckResult) obj;
            return this.isValid == htmlSsrfThreatCheckResult.isValid
                && this.isThreat == htmlSsrfThreatCheckResult.isThreat
                && this.threatLinks == htmlSsrfThreatCheckResult.threatLinks;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (isValid == null ? 0 : System.hashCode(isValid));
        hashCode = (17 * hashCode) + (isThreat == null ? 0 : System.hashCode(isThreat));
        hashCode = (17 * hashCode) + (threatLinks == null ? 0 : System.hashCode(threatLinks));
        return hashCode;
    }
}

