/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to find a string in a string
 */
public class SwagFindStringRegexRequest implements Swagger.MappedProperties {
    /**
     * Input text content
     * @return textContent
     */
    public String textContent { get; set; }

    /**
     * Target input regular expression (regex) to find
     * @return targetRegex
     */
    public String targetRegex { get; set; }

    /**
     * Set to True to match case, False to ignore case
     * @return matchCase
     */
    public Boolean matchCase { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'TextContent' => 'textContent',
        'TargetRegex' => 'targetRegex',
        'MatchCase' => 'matchCase'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagFindStringRegexRequest getExample() {
        SwagFindStringRegexRequest findStringRegexRequest = new SwagFindStringRegexRequest();
        findStringRegexRequest.textContent = 'aeiou';
        findStringRegexRequest.targetRegex = 'aeiou';
        findStringRegexRequest.matchCase = true;
        return findStringRegexRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFindStringRegexRequest) {
            SwagFindStringRegexRequest findStringRegexRequest = (SwagFindStringRegexRequest) obj;
            return this.textContent == findStringRegexRequest.textContent
                && this.targetRegex == findStringRegexRequest.targetRegex
                && this.matchCase == findStringRegexRequest.matchCase;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (textContent == null ? 0 : System.hashCode(textContent));
        hashCode = (17 * hashCode) + (targetRegex == null ? 0 : System.hashCode(targetRegex));
        hashCode = (17 * hashCode) + (matchCase == null ? 0 : System.hashCode(matchCase));
        return hashCode;
    }
}

