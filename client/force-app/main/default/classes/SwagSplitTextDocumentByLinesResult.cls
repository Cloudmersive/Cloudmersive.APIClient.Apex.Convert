/*
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * The result of splitting a Text document into separate lines
 */
public class SwagSplitTextDocumentByLinesResult implements Swagger.MappedProperties {
    /**
     * Get resultLines
     * @return resultLines
     */
    public List<SwagTextDocumentLine> resultLines { get; set; }

    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * The count of lines in the text file
     * @return lineCount
     */
    public Integer lineCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ResultLines' => 'resultLines',
        'Successful' => 'successful',
        'LineCount' => 'lineCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagSplitTextDocumentByLinesResult() {
        resultLines = new List<SwagTextDocumentLine>();
    }

    public static SwagSplitTextDocumentByLinesResult getExample() {
        SwagSplitTextDocumentByLinesResult splitTextDocumentByLinesResult = new SwagSplitTextDocumentByLinesResult();
        splitTextDocumentByLinesResult.resultLines = new List<SwagTextDocumentLine>{SwagTextDocumentLine.getExample()};
        splitTextDocumentByLinesResult.successful = true;
        splitTextDocumentByLinesResult.lineCount = 123;
        return splitTextDocumentByLinesResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagSplitTextDocumentByLinesResult) {
            SwagSplitTextDocumentByLinesResult splitTextDocumentByLinesResult = (SwagSplitTextDocumentByLinesResult) obj;
            return this.resultLines == splitTextDocumentByLinesResult.resultLines
                && this.successful == splitTextDocumentByLinesResult.successful
                && this.lineCount == splitTextDocumentByLinesResult.lineCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (resultLines == null ? 0 : System.hashCode(resultLines));
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (lineCount == null ? 0 : System.hashCode(lineCount));
        return hashCode;
    }
}

